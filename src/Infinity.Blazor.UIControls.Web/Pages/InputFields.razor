@page "/input-fields"

<PageTitle>Input fields</PageTitle>

@using System.ComponentModel.DataAnnotations
@using Telerik.Blazor.Components
@using Infinity.Blazor.UIControls.InputFields
@using Infinity.Blazor.UIControls.Icons

<h2>Input Text</h2>

<TextBox PlaceHolder="Input here" Width="500px" />

<br />

<TextBox PlaceHolder="Input here" Width="500px">
    <IconTemplate>
        <BarcodeScannerIcon />
    </IconTemplate>
</TextBox>

<br />

<TextBox PlaceHolder="Input here" Width="500px" IconPosition="IconPosition.Right">
    <IconTemplate>
        <SearchIcon />
    </IconTemplate>
</TextBox>

<br />

<EditForm Model="@person">
    <DataAnnotationsValidator />

    <TextBox LabelText="Name:" PlaceHolder="Input here" @bind-Value="@person.Name">
        <IconTemplate>
            <AddIcon />
        </IconTemplate>
    </TextBox>
    <ValidationMessage For="@(() => person.Name)"></ValidationMessage>

    <br />

    <TextBox LabelText="Address:" PlaceHolder="Input here" @bind-Value="@person.Address" IconPosition="IconPosition.Right">
        <IconTemplate>
            <EditIcon />
        </IconTemplate>
    </TextBox>
    <TelerikValidationMessage For="@(() => person.Address)"></TelerikValidationMessage>

    <br />
    <br />
    <TelerikButton ButtonType="@Telerik.Blazor.ButtonType.Submit">Submit</TelerikButton>
</EditForm>

<br />

<h2>Input Text Area</h2>

<EditForm Model="@person">
    <DataAnnotationsValidator />

    <TextArea LabelText="Name:" PlaceHolder="Input here" @bind-Value="@person.Name" Width="500px"></TextArea>
    <ValidationMessage For="@(() => person.Name)"></ValidationMessage>

    <br />

    <TextArea LabelText="Address:" PlaceHolder="Input here" @bind-Value="@person.Address"></TextArea>
    <TelerikValidationMessage For="@(() => person.Address)"></TelerikValidationMessage>

    <br />
    <br />
    <TelerikButton ButtonType="@Telerik.Blazor.ButtonType.Submit">Submit</TelerikButton>
</EditForm>

<br />

@code {
    Person person { get; set; } = new Person();

    string theTbValue { get; set; } = "lorem ipsum";

    public class Person
    {
        [Required(ErrorMessage = "Enter a name")]
        [MinLength(3, ErrorMessage = "That name is too short")]
        [StringLength(10, ErrorMessage = "That name is too long")]
        public string Name { get; set; }

        [Required(ErrorMessage = "Enter an address")]
        public string Address { get; set; }
    }
}